{"ast":null,"code":"import _toConsumableArray from\"/Users/charvai/Personal/PERSONAL D/MyProject/Socket.io/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/charvai/Personal/PERSONAL D/MyProject/Socket.io/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import queryString from'query-string';import io from\"socket.io-client\";import Messages from'../Messages/Messages';import InfoBar from'../InfoBar/InfoBar';import Input from'../Input/Input';import'./Chat.css';import{useLocation}from\"react-router\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ENDPOINT='https://socket-app-chat-web.herokuapp.com/';// const ENDPOINT = 'localhost:8000';\nvar socket;var Chat=function Chat(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),room=_useState4[0],setRoom=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),users=_useState6[0],setUsers=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),message=_useState8[0],setMessage=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),messages=_useState10[0],setMessages=_useState10[1];var location=useLocation();useEffect(function(){var _queryString$parse=queryString.parse(location.search),name=_queryString$parse.name,room=_queryString$parse.room;socket=io(ENDPOINT,{transports:['websocket']});setRoom(room);setName(name);socket.emit('join',{name:name,room:room},function(error){if(error){alert(error);}});},[ENDPOINT,location.search]);useEffect(function(){socket.on('message',function(message){setMessages(function(messages){return[].concat(_toConsumableArray(messages),[message]);});});socket.on(\"roomData\",function(_ref){var users=_ref.users;setUsers(users);});},[]);var sendMessage=function sendMessage(event){event.preventDefault();if(message){socket.emit('sendMessage',message,function(){return setMessage('');});}};return/*#__PURE__*/_jsx(\"div\",{className:\"outerContainer\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(InfoBar,{room:room}),/*#__PURE__*/_jsx(Messages,{messages:messages,name:name}),/*#__PURE__*/_jsx(Input,{message:message,setMessage:setMessage,sendMessage:sendMessage})]})});};export default Chat;","map":{"version":3,"sources":["/Users/charvai/Personal/PERSONAL D/MyProject/Socket.io/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","Messages","InfoBar","Input","useLocation","ENDPOINT","socket","Chat","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","location","parse","search","transports","emit","error","alert","on","sendMessage","event","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport queryString from 'query-string';\nimport io from \"socket.io-client\";\n\n\nimport Messages from '../Messages/Messages';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\n\nimport './Chat.css';\nimport { useLocation } from \"react-router\";\n\nconst ENDPOINT = 'https://socket-app-chat-web.herokuapp.com/';\n// const ENDPOINT = 'localhost:8000';\n\nlet socket;\n\nconst Chat = () => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [users, setUsers] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  const location = useLocation()\n\n  useEffect(() => {\n    const { name, room } = queryString.parse(location.search);\n\n    socket = io(ENDPOINT ,{ transports : ['websocket'] });\n\n    setRoom(room);\n    setName(name)\n\n    socket.emit('join', { name, room }, (error) => {\n      if(error) {\n        alert(error);\n      }\n    });\n  }, [ENDPOINT, location.search]);\n  \n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages(messages => [ ...messages, message ]);\n    });\n    \n    socket.on(\"roomData\", ({ users }) => {\n      setUsers(users);\n    });\n}, []);\n\n  const sendMessage = (event) => {\n    event.preventDefault();\n\n    if(message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  }\n\n  return (\n    <div className=\"outerContainer\">\n      <div className=\"container\">\n          <InfoBar room={room} />\n          <Messages messages={messages} name={name} />\n          <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\n      </div>\n    \n    </div>\n  );\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}